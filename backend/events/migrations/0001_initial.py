# Generated by Django 3.2.18 on 2024-05-23 10:03

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('name', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Название города')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('name', models.CharField(max_length=30, verbose_name='Название дисциплины')),
            ],
            options={
                'verbose_name': 'Дисциплина уличной культуры',
                'verbose_name_plural': 'Дисциплины уличных культур',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('title', models.CharField(help_text='Введите название мероприятия', max_length=150, verbose_name='Название мероприятия')),
                ('description', models.TextField(help_text='Введите описание мероприятия', max_length=10000, verbose_name='Описание')),
                ('start_datetime', models.DateTimeField(help_text='Введите дату и время начала мероприятия', verbose_name='Дата и время начала')),
                ('end_datetime', models.DateTimeField(help_text='Введите дату и время окончания мероприятия', verbose_name='Дата и время окончания')),
                ('is_moderation', models.BooleanField(default=False)),
                ('organizers_contact', models.JSONField(blank=True, help_text='Введите ссылку на связь с организаторами', null=True, verbose_name='Связь с организатором')),
                ('count_entrant', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_author', to=settings.AUTH_USER_MODEL, verbose_name='Автор мероприятия')),
                ('discipline', models.ForeignKey(help_text='Выберите дисциплину уличного спорта', on_delete=django.db.models.deletion.CASCADE, related_name='events_discipline', to='events.discipline', verbose_name='Дисциплина уличного спорта')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='TypeEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('name', models.CharField(max_length=30, verbose_name='Название типа меропрития')),
            ],
            options={
                'verbose_name': 'Тип мероприятия',
                'verbose_name_plural': 'Типы мероприятий',
            },
        ),
        migrations.CreateModel(
            name='SubDiscipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('name', models.CharField(max_length=30, verbose_name='Название подкатегории')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_disciplines', to='events.discipline', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Подкатегория дисциплины',
                'verbose_name_plural': 'Подкатегории дисциплин',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Название региона')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Код региона')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to=settings.AUTH_USER_MODEL, verbose_name='Региональный руководитель')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('name', models.CharField(help_text='Введите название площадки', max_length=150, unique=True, verbose_name='Название площадки')),
                ('type_of_area', models.CharField(choices=[('OPEN', 'Открытая'), ('CLOSED', 'Закрытая')], help_text='Выберите тип площадки', max_length=20, verbose_name='Тип площадки')),
                ('address', models.CharField(max_length=150, verbose_name='Адрес площадки')),
                ('city', models.ForeignKey(help_text='Выберите город', on_delete=django.db.models.deletion.CASCADE, related_name='location_city', to='events.city', verbose_name='Город проведения')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_region', to='events.region', verbose_name='Регион проведения')),
            ],
            options={
                'verbose_name': 'Локация мероприятия',
                'verbose_name_plural': 'Локации мероприятия',
            },
        ),
        migrations.CreateModel(
            name='GalleryEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('file', models.FileField(help_text='Загрузите файл.', upload_to='files_events/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'mp4', 'avi', 'mov', 'wmv', 'flv', 'mkv'])], verbose_name='Файл')),
                ('event', models.ForeignKey(help_text='Медиа-файлы, связанные с этим мероприятием', on_delete=django.db.models.deletion.CASCADE, related_name='gallery_events', to='events.event', verbose_name='Мероприятие')),
            ],
            options={
                'verbose_name': 'Галерея меропрития',
                'verbose_name_plural': 'Галерея меропритий',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_location', to='events.location', verbose_name='Локация мероприятия'),
        ),
        migrations.AddField(
            model_name='event',
            name='sub_discipline',
            field=models.ForeignKey(help_text='Выберите субдисциплину', on_delete=django.db.models.deletion.CASCADE, related_name='events_sub_discipline', to='events.subdiscipline', verbose_name='Субдисциплина уличного спорта'),
        ),
        migrations.AddField(
            model_name='event',
            name='type_of_event',
            field=models.ForeignKey(help_text='Выберите тип мероприятия', on_delete=django.db.models.deletion.CASCADE, related_name='events_type_of_event', to='events.typeevent', verbose_name='Тип мероприятия'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(help_text='Выберите регион', on_delete=django.db.models.deletion.CASCADE, related_name='region_city', to='events.region', verbose_name='Регион'),
        ),
    ]
