# Generated by Django 3.2.18 on 2024-05-27 14:55

import core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата редактирования записи')),
                ('role', models.CharField(choices=[('ADMIN', 'admin'), ('USER', 'user'), ('REGIONAL_DIRECTOR', 'regional_director')], default='USER', max_length=20, verbose_name='Роль')),
                ('first_name', models.CharField(max_length=50, validators=[core.validators.validate_full_name], verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, validators=[core.validators.validate_full_name], verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, validators=[core.validators.validate_full_name], verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('MALE', 'male'), ('FEMALE', 'female')], max_length=6, verbose_name='Пол')),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now, verbose_name='Дата рождения')),
                ('phone_number', models.CharField(max_length=12, unique=True, validators=[core.validators.validate_phone_number], verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('city', models.CharField(max_length=20, verbose_name='Город')),
                ('passport_series', models.CharField(max_length=4, validators=[core.validators.validate_passport_series], verbose_name='Серия паспорта')),
                ('passport_number', models.CharField(max_length=6, validators=[core.validators.validate_passport_number], verbose_name='Номер паспорта')),
                ('passport_issue_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата выдачи паспорта')),
                ('passport_issued_by', models.CharField(max_length=150, verbose_name='Кем выдан паспорт')),
                ('consent_to_rights', models.BooleanField(default=False, verbose_name='Согласие с правилами')),
                ('сonsent_to_processing', models.BooleanField(default=False, verbose_name='Согласие на обработку данных')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
